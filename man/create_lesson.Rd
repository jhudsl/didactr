% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_lesson.R
\name{create_lesson}
\alias{create_lesson}
\alias{create_lessons_from_book}
\title{Create a Lesson}
\usage{
create_lesson(
  lesson_name,
  course_dir = ".",
  verbose = TRUE,
  md_file = NULL,
  make_slide_deck = TRUE,
  slide_id = NULL,
  extract_code = FALSE,
  rmd = extract_code,
  open = FALSE,
  template_slide_id = "143gvqcynq_bl7iVd2G9yjumwJJkAy0S6CyNCsrJ2LgE",
  publish = TRUE,
  add_number = TRUE,
  use_google_drive = FALSE,
  ...
)

create_lessons_from_book(
  course_dir = ".",
  verbose = TRUE,
  make_slide_deck = FALSE,
  ...
)
}
\arguments{
\item{lesson_name}{Name of the Lesson to create.  This should be
human-readable and will be the title of your lesson in your course.}

\item{course_dir}{directory with course materials}

\item{verbose}{print diagnostic messages}

\item{md_file}{Output markdown file to create.  If not specified,
will take the \code{lesson_name}, sub out spaces, lower case it,
and use that for the file name.}

\item{make_slide_deck}{Create a slide deck on Google Slides if
no link is provided.}

\item{slide_id}{ID to slide deck on Google Slides.  Caution,
this will publish the slide deck to the web.}

\item{extract_code}{If you have text with \code{#rstats} in the
slide or \code{#rstats} in the Alt-text title, code will be
included}

\item{rmd}{Should an Rmd (Rmarkdown) be made versus a Markdown?}

\item{open}{should the file be opened for editing?}

\item{template_slide_id}{Slide ID for a template.  This template
will be copied to your new slide deck.}

\item{publish}{should the slide be published so slides can be
included in the markdown?}

\item{add_number}{Add a prefix to the file name, such as
`00_` for the first file}

\item{use_google_drive}{passed to \code{\link{gs_slide_df}}
to call \code{\link{gs_to_drive_pngs}} when putting in PNGs
into the lesson.}

\item{...}{arguments passed to \code{\link{check_didactr_auth}}}
}
\value{
A list of the created markdown manuscript file and script files.
\code{create_lessons_from_book} will return a list of these lists,
one for each lesson in the \code{Book.txt} file.
}
\description{
Create a Lesson
}
\examples{
root_path = tempfile()
course_name = "test"
sc = create_course(course_name, root_path)
verbose = TRUE
out =create_lesson(lesson_name = "how to Do Things",
course_dir = sc$course_dir,
make_slide_deck = FALSE,
open = FALSE)
dir(sc$man_path)
dir(sc$scr_path)
readLines(sc$book_txt, warn = FALSE)
readLines(out$md_file)
in_ci <- function() {
nzchar(Sys.getenv("CI"))
}
\dontrun{
# requires authorization
root_path = tempfile()
course_name = "test"
sc = create_course(course_name, root_path)
verbose = TRUE
out = create_lesson(lesson_name = "how to Do Things",
course_dir = sc$course_dir,
make_slide_deck = !in_ci(),
open = interactive())
dir(sc$man_path)
dir(sc$scr_path)
readLines(sc$book_txt, warn = FALSE)
readLines(out$md_file, warn = FALSE)
}

root_path = tempfile()
course_name = "test"
sc = create_course(course_name, root_path)
verbose = TRUE
x =  system.file("extdata", "Book.txt", package = "didactr")
file.copy(x, sc$book_txt, overwrite = TRUE)
course_dir = sc$course_dir
res = create_lessons_from_book(course_dir = sc$course_dir, open = FALSE,
make_slide_deck = FALSE
)
dir(sc$man_path)
dir(sc$scr_path)
readLines(sc$book_txt)
readLines(res[[3]]$md_file)
}
